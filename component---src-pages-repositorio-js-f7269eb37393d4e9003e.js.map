{"version":3,"file":"component---src-pages-repositorio-js-f7269eb37393d4e9003e.js","mappings":"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","sources":["webpack://gatsby-starter-default/./src/pages/repositorio.js"],"sourcesContent":["import * as React from \"react\"\r\nimport { Link, graphql, useStaticQuery } from \"gatsby\"\r\nimport { StaticImage } from \"gatsby-plugin-image\"\r\nimport BackgroundImage from 'gatsby-background-image'\r\n\r\nimport Layout from \"../components/layout\"\r\nimport FullScreenSection from \"../components/full-screen-section\"\r\nimport Seo from \"../components/seo\"\r\n\r\nimport styled from 'styled-components'\r\n\r\nimport { Suspense , useRef, useState, useMemo, useEffect } from 'react';\r\n\r\nimport * as d3 from 'd3';\r\n// import tree from 'd3-tree';\r\n\r\nimport { textwrap } from 'd3-textwrap';\r\n\r\nimport { Modal } from 'bootstrap';\r\n\r\nconst RepositorioPage = () => {\r\n\r\n  const data = useStaticQuery(\r\n    graphql`\r\n      query {\r\n        bg1:\r\n\r\n        file(relativePath: { eq: \"pointcloud2.jpg\" }) {\r\n          childImageSharp {\r\n            fluid(quality: 90, maxWidth: 1920) {\r\n              ...GatsbyImageSharpFluid_noBase64\r\n            }\r\n          }\r\n        }\r\n\r\n        bg2:\r\n        file(relativePath: { eq: \"obj.jpg\" }) {\r\n          childImageSharp {\r\n            fluid(quality: 90, maxWidth: 1920) {\r\n              ...GatsbyImageSharpFluid_noBase64\r\n            }\r\n          }\r\n        }\r\n\r\n      }\r\n    `\r\n  )\r\n\r\n  // const cdl_muros = React.lazy(() => import('../images/cdl_muros.obj'))\r\n  \r\n\r\n  // const obj = useLoader(OBJLoader, '../images/cdl_muros.obj')\r\n\r\n  // const data2 = useStaticQuery(\r\n  //   graphql`\r\n  //     query {\r\n  //       desktop: file(relativePath: { eq: \"obj.jpg\" }) {\r\n  //         childImageSharp {\r\n  //           fluid(quality: 90, maxWidth: 1920) {\r\n  //             ...GatsbyImageSharpFluid_noBase64\r\n  //           }\r\n  //         }\r\n  //       }\r\n  //     }\r\n  //   `\r\n  // )\r\n\r\n  const bg1 = data.bg1.childImageSharp.fluid\r\n  const bg2 = data.bg2.childImageSharp.fluid\r\n\r\n  const modalRef = useRef(null);\r\n\r\n  const iframeRef = useRef(null);\r\n  const itemTitulo = useRef(null);\r\n  const itemFecha = useRef(null);\r\n  const itemMedio = useRef(null);\r\n  const itemFuente = useRef(null);\r\n\r\n  // const showModal = (link) => {\r\n  //   console.log(link);\r\n  //   // let modal = new Modal(document.getElementById('myModal'), {});\r\n  //   // document.getElementById('myModal').show();\r\n  //   // jQuery('#myModal').modal()\r\n  // }\r\n\r\n\r\n  const DrawTable = () => {\r\n\r\n    const [data,setData] = useState([]);\r\n\r\n    fetch(\r\n      \"https://opensheet.elk.sh/1HnOngNCBpJHBp2_GQbo7X_83dDXW-QMdMw-ybb7oaVA/Prensa\"\r\n    )\r\n      .then((res) => res.json())\r\n      .then((data) => {\r\n        setData(data);\r\n      });\r\n\r\n      return (<div className={'table-responsive'}><table className={'table table-striped table-sm'}><tbody>\r\n\r\n            <tr>\r\n              <td>Autor</td>\r\n              <td>Titulo</td>\r\n              <td>Medio</td>\r\n              <td>Fecha</td>\r\n              <td>URL</td>\r\n            </tr>\r\n\r\n        {data.map((val, key) => {\r\n          return (\r\n            <tr key={key}>\r\n              <td>{val['Autor']}</td>\r\n              <td>{val['Título']}</td>\r\n              <td>{val['Medio']}</td>\r\n              <td>{val['Fecha (Día, mes año)']}</td>\r\n              <td>{ val['URL'] ? <a role='button' href={'#'} onClick={ () => {iframeRef.current.src=val['URL']; itemTitulo.current.innerHTML=val['Título']; itemMedio.current.innerHTML=val['Medio']; itemFecha.current.innerHTML=val['Fecha (Día, mes año)']; itemFuente.current.innerHTML=val['Fuente']; }} data-bs-toggle=\"modal\" data-url={val['URL']} data-bs-target=\"#myModal\">Ver</a> : '' }</td>\r\n            </tr>\r\n          )\r\n        })}     \r\n      </tbody></table></div>);\r\n  }\r\n\r\n  const DrawChart = () => {\r\n\r\n    d3.textwrap = textwrap;\r\n\r\n    const [treeDataSource,setTreeDataSource] = useState([]);\r\n    const svgRef = useRef(null);\r\n    const svgWidth = window.innerWidth-200;\r\n    const svgHeight = window.innerHeight*1.5;\r\n\r\n    var wrap = d3.textwrap().bounds({height: 50, width: 200, x: 15, y: -15});\r\n\r\n    useEffect( () => {\r\n      // drawTree();\r\n\r\n      new Promise( (res, rej) => {\r\n        fetch(\"https://opensheet.elk.sh/1HnOngNCBpJHBp2_GQbo7X_83dDXW-QMdMw-ybb7oaVA/Prensa\")\r\n          .then((res) => res.json())\r\n          .then((data) => {\r\n\r\n            // console.log(data);\r\n            let parsedTreeData = data.map( item => {\r\n                return {'name': item['Título']}\r\n              });\r\n\r\n            // setTreeDataSource({'name': 'Prensa', 'children': parsedTreeData})\r\n            // console.log(treeDataSource);\r\n            res({'name': 'Prensa', 'children': parsedTreeData})\r\n            \r\n          });\r\n      }).then( (res) => {\r\n        drawTree(res);\r\n      })\r\n\r\n    // let sheetData = fetch(\r\n    //   \"https://opensheet.elk.sh/1HnOngNCBpJHBp2_GQbo7X_83dDXW-QMdMw-ybb7oaVA/Prensa\"\r\n    // )\r\n    //   .then((res) => res.json())\r\n    //   .then((data) => {\r\n\r\n    //     // console.log(data);\r\n\r\n    //     let parsedTreeData = data.map( item => {\r\n    //         return {'name': item['Título']}\r\n    //       });\r\n\r\n    //     setTreeDataSource({'name': 'Prensa', 'children': parsedTreeData})\r\n    //     // console.log(treeDataSource);\r\n\r\n    //     setTimeout( () => {\r\n    //       console.log(treeDataSource);\r\n    //       drawTree();\r\n    //     }, 5000)\r\n        \r\n    //   });\r\n\r\n\r\n      // modalRef.current.addEventListener('show.bs.modal', function (event) {\r\n      //   console.log(event);\r\n      // })\r\n\r\n    }, [])  \r\n\r\n    const drawTree = (resData) => {\r\n\r\n      console.log('render');\r\n\r\n      let height = svgHeight;\r\n      let width = svgWidth;\r\n      \r\n      let data = d3.hierarchy(resData)\r\n      // const svg = d3.create(\"svg\");\r\n      const svg = d3.select(svgRef.current);\r\n\r\n      let diameter = height * 0.75;\r\n      let radius = diameter / 2;let tree = d3.tree()\r\n          .size([2 * Math.PI, radius])\r\n          .separation(function(a, b) { \r\n              return (a.parent == b.parent ? 1 : 2) / a.depth; \r\n          });\r\n\r\n      let treeData = tree(data);\r\n\r\n      let nodes = treeData.descendants();\r\n      let links = treeData.links();\r\n\r\n      let graphGroup = svg.append('g').attr('transform', \"translate(\"+(width/2)+\",\"+(height/2)+\")\");\r\n\r\n      graphGroup.selectAll(\".link\")\r\n        .data(links)\r\n        .join(\"path\")\r\n        .attr(\"class\", \"link\")\r\n        .attr(\"d\", d3.linkRadial()\r\n          .angle(d => d.x)\r\n          .radius(d => d.y));\r\n\r\n      let node = graphGroup\r\n              .selectAll(\".node\")\r\n              .data(nodes)\r\n              .join(\"g\")\r\n              .attr(\"class\", \"node\")\r\n              .attr(\"transform\", function(d){\r\n                  return `rotate(${d.x * 180 / Math.PI - 90})` \r\n                      + `translate(${d.y}, 0)`;\r\n              });        \r\n\r\n      node.append(\"circle\").attr(\"r\", 3);\r\n\r\n      node.append(\"text\")\r\n        .attr(\"font-family\", \"sans-serif\")\r\n        .attr(\"font-size\", 12)\r\n        .attr(\"width\", 100)\r\n        .attr(\"dx\", function(d) { return d.x < Math.PI ? 8 : -8; })\r\n        .attr(\"dy\", \".25em\")\r\n        .attr(\"text-anchor\", function(d) { \r\n            return d.x < Math.PI ? \"start\" : \"end\"; \r\n        })\r\n        .attr(\"transform\", function(d) { \r\n            return d.x < Math.PI ? null : \"rotate(180)\"; \r\n        })\r\n        .text( function (d) {\r\n          return d.data.name;\r\n          // let dArray = d.data.name.split(\" \");\r\n          // console.log(dArray);\r\n          // if (!(dArray.length > 1)) {\r\n            // return d.data.name;\r\n          // } else {\r\n            // for (let i = 0; i < dArray.length ; i++) {\r\n\r\n              // this.append(\"tspan\").text(dArray[i]+\" \");\r\n              // return <tspan>dArray[i]</tspan>\r\n            // }            \r\n          // }\r\n        })\r\n        // .text(function(d) { \r\n          // let dArray = d.data.name.split(\" \");\r\n          // return d.data.name;\r\n        // });\r\n\r\n\r\n        // node.select(\"text\")\r\n        //   .append(function (d) {\r\n        //     let dArray = d.data.name.split(\" \");\r\n        //     console.dir(dArray);\r\n        //     // dArray.forEach((item) => {\r\n        //       // return <tspan></tspan>\r\n        //     // });\r\n        //   });\r\n\r\n      d3.selectAll('text').call(wrap);\r\n\r\n\r\n    }\r\n\r\n\r\n    // useEffect( () => {\r\n    //   // console.dir(data);\r\n    // }, [data]);\r\n\r\n    \r\n\r\n    \r\n\r\n\r\n    return (<svg ref={svgRef} width={svgWidth} height={svgHeight} />);\r\n\r\n  }\r\n\r\n  return (\r\n\r\n      <Layout>\r\n\r\n        <Seo title=\"Home\" />\r\n\r\n        <FullScreenSection>\r\n\r\n          <BackgroundImage\r\n            Tag=\"section\"\r\n            className={'container-fluid fullheight-ribbon d-flex flex-column'}\r\n            fluid={bg1}\r\n            backgroundColor={`#040e18`}\r\n          >\r\n\r\n          \t<div className={`row flex-1 pt-3`}>\r\n        \t\t        \t\t\r\n              <div className={`col h-100`}>\r\n\r\n                <h1 className={`text-black display-4`}>Repositorio</h1>\r\n                <p className={`text-black`}>Compendio de archivos de video, audio, fotografías y documentos que se relacionen con el mural del Paso Inferior Santa Lucía en un sólo lugar y que puedan servir para orientar a profesores e investigadores de artes visuales, arquitectura, urbanismo y público general con respecto al arte en espacio público.</p>\r\n\r\n                <div className={`text-center`}>\r\n                  <StaticImage\r\n                    alt={`Curva de la Luz`}\r\n                    src=\"../images/repositorio.png\"\r\n                    width={300}\r\n                    quality={95}\r\n                    style={{ \r\n                    }}\r\n                  />                  \r\n                </div>\r\n\r\n                <div className={`mt-3 rounded-3 p-5 mb-5`} style={{ position: \"relative\", width: '100%', backgroundColor: 'rgba(0, 91, 172, 1)' }}>\r\n                  <DrawTable />\r\n                  <DrawChart />\r\n                </div>\r\n                \r\n\r\n              </div>\r\n\r\n          \t</div>\r\n\r\n            <div className={`row ribbon no-gutters`}>\r\n\r\n            \t<div className={`col-3 ribbon-blue`}></div>\r\n            \t<div className={`col-2 ribbon-red`}></div>\r\n            \t<div className={`col-4 ribbon-navy`}></div>\r\n            \t<div className={`col-3 ribbon-gray`}></div>\r\n\r\n            </div>\r\n\r\n          </BackgroundImage>\r\n\r\n        </FullScreenSection>\r\n\r\n        <div ref={modalRef} className={\"modal fade\"} id=\"myModal\" data-bs-backdrop=\"static\" data-bs-keyboard=\"false\" tabIndex={-1} aria-labelledby=\"staticBackdropLabel\" aria-hidden=\"true\">\r\n          <div className={\"modal-dialog\"}>\r\n            <div className={\"modal-content\"}>\r\n              <div className={\"modal-header\"}>\r\n                <h5 className={\"modal-title\"} id=\"staticBackdropLabel\"></h5>\r\n                <button type=\"button\" className={\"btn-close\"} data-bs-dismiss=\"modal\" aria-label=\"Cerrar\"></button>\r\n              </div>\r\n              <div className={\"modal-body\"}>\r\n                 <img ref={iframeRef} />\r\n                 <p ref={itemTitulo} className={\"modal-body-item-titulo p-0 m-0 fs-4\"}></p>\r\n                 <p className={\"modal-body-item-medio p-0 m-0 fs-5\"}><span ref={itemMedio}></span><span>, </span><span ref={itemFecha}></span></p>\r\n                 <p ref={itemFuente} className={\"modal-body-item-fuente p-0 m-0 fs-6\"}></p>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      \r\n      </Layout>\r\n    \r\n  )\r\n\r\n}\r\n\r\nexport default RepositorioPage;\r\n"],"names":["data","useStaticQuery","bg1","childImageSharp","fluid","modalRef","bg2","useRef","iframeRef","itemTitulo","itemFecha","itemMedio","itemFuente","DrawTable","useState","setData","fetch","then","res","json","className","map","val","key","role","href","onClick","current","src","innerHTML","DrawChart","d3","textwrap","svgRef","svgWidth","window","innerWidth","svgHeight","innerHeight","wrap","bounds","height","width","x","y","useEffect","Promise","rej","parsedTreeData","item","drawTree","resData","console","log","svg","radius","treeData","size","Math","PI","separation","a","b","parent","depth","tree","nodes","descendants","links","graphGroup","append","attr","selectAll","join","angle","d","node","text","name","call","ref","title","Tag","backgroundColor","S","alt","quality","style","position","id","tabIndex","type"],"sourceRoot":""}